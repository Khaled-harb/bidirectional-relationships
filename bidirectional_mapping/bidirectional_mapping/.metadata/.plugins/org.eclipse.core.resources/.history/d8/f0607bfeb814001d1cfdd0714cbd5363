package com.example.bidirectional_mapping.Factory_Service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.bidirectional_mapping.Reposetory.Car_Reposetory;
import com.example.bidirectional_mapping.Reposetory.Engineers_Reposetory;
import com.example.bidirectional_mapping.Reposetory.Factory_Repository;
import com.example.bidirectional_mapping.model.Car_Factory;
import com.example.bidirectional_mapping.model.Cars;
import com.example.bidirectional_mapping.model.Engineers;
@Service

public interface Factory_Service {

	@Autowired Car_Reposetory car_Reposetory;
	@Autowired  Engineers_Reposetory engineers_Reposetory ;
    @Autowired Factory_Repository factory_Repository;
    

    public void factoryIntializing (String fact_naem) {
    	factory_Repository.save(new Car_Factory(fact_naem));

    }

    public void hiring_engineers(String fact_name, Integer fact_Id) {

    	Car_Factory car_fact = factory_Repository.findById(fact_Id).get();
        Engineers engs= new Engineers(fact_name,car_fact);
        car_fact.addTeam(engs);
        factory_Repository.save(car_fact);
    }

    public void car_manufacturing(String cars_model, Integer eng_id) {
    	Engineers engs= engineers_Reposetory.findById(eng_id).get();
        Cars car = new Cars(cars_model);
        engs.Selecting_Team(car);
        engineers_Reposetory.save(engs);
    }

    public void assignProject(Integer projectId, Integer teamId) {
        Project project= projectRepository.findById(projectId).get();
        Team team =teamRepository.findById(teamId).get();
        team.assignProject(project);
        teamRepository.save(team);


    }

    public void creeateOrgDetails(String discription, Integer orgId) {
        Organization org= organiationRepository.findById(orgId).get();
        org.setDetails(new OrganizationDetails(discription));
        organiationRepository.save(org);

    }
}
